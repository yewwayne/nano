From 0386bd71454e57d911f0a3849ae09a336cf29ed9 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <michael.i.doherty@intel.com>
Date: Mon, 15 May 2017 16:41:32 +0100
Subject: [PATCH] Support a stateless configuration by default

When the /etc/nanorc file exists, it will be loaded upon startup. In the
absence of this file we'll load the vendor file from /usr/share/defaults,
in "nano/nanorc". This provides some sane out of the box defaults and is
free from update issues, as it falls into the domain of the vendor, and
not the local administrator.

Signed-off-by: Ikey Doherty <michael.i.doherty@intel.com>
Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
---
 Makefile.am     |   2 +-
 src/Makefile.am |   6 +-
 src/nanorc      | 324 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/rcfile.c    |   5 +
 4 files changed, 335 insertions(+), 2 deletions(-)
 create mode 100644 src/nanorc

diff --git a/Makefile.am b/Makefile.am
index 1971a11..bb552ca 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -7,6 +7,6 @@ SUBDIRS += syntax
 endif
 
 EXTRA_DIST = ChangeLog.1999-2006 ChangeLog.2007-2015 \
-		IMPROVEMENTS README.GIT nano.spec
+		IMPROVEMENTS README.GIT nano.spec src/nanorc
 
 ACLOCAL_AMFLAGS = -I m4
diff --git a/src/Makefile.am b/src/Makefile.am
index 625434c..0ac120e 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1,6 +1,10 @@
-AM_CPPFLAGS = -DLOCALEDIR=\"$(localedir)\" -DSYSCONFDIR=\"$(sysconfdir)\" \
+AM_CPPFLAGS = -DDATADIR=\"$(datadir)\" -DLOCALEDIR=\"$(localedir)\" -DSYSCONFDIR=\"$(sysconfdir)\" \
 	-I$(top_builddir)/lib -I$(top_srcdir)/lib
 
+defaultsdir = $(datadir)/defaults/nano
+defaults_DATA = \
+		nanorc
+
 CLEANFILES = revision.h
 
 if BUILDING_FROM_GIT
diff --git a/src/nanorc b/src/nanorc
new file mode 100644
index 0000000..ac066f6
--- /dev/null
+++ b/src/nanorc
@@ -0,0 +1,324 @@
+## Sample initialization file for GNU nano.
+##
+## Please note that you must have configured nano with --enable-nanorc
+## for this file to be read!  Also note that this file should not be in
+## DOS or Mac format, and that characters specially interpreted by the
+## shell should not be escaped here.
+##
+## To make sure an option is disabled, use "unset <option>".
+##
+## For the options that take parameters, the default value is given.
+## Other options are unset by default.
+##
+## Quotes inside string parameters don't have to be escaped with
+## backslashes.  The last double quote in the string will be treated as
+## its end.  For example, for the "brackets" option, ""')>]}" will match
+## ", ', ), >, ], and }.
+
+## Silently ignore problems with unknown directives in the nanorc file.
+## Useful when your nanorc file might be read on systems with multiple
+## versions of nano installed (e.g. your home directory is on NFS).
+# set quiet
+
+## Use auto-indentation.
+# set autoindent
+
+## Back up files to the current filename plus a tilde.
+# set backup
+
+## The directory to put unique backup files in.
+# set backupdir ""
+
+## Do backwards searches by default.
+# set backwards
+
+## Use bold text instead of reverse video text.
+# set boldtext
+
+## The characters treated as closing brackets when justifying
+## paragraphs.  They cannot contain blank characters.  Only closing
+## punctuation, optionally followed by closing brackets, can end
+## sentences.
+# set brackets ""')>]}"
+
+## Do case-sensitive searches by default.
+# set casesensitive
+
+## Constantly display the cursor position in the statusbar.  Note that
+## this overrides "quickblank".
+# set const
+
+## Use cut-to-end-of-line by default.
+# set cut
+
+## Set the line length for wrapping text and justifying paragraphs.
+## If the value is 0 or less, the wrapping point will be the screen
+## width less this number.
+# set fill -8
+
+## Enable ~/.nano_history for saving and reading search/replace strings.
+# set historylog
+
+## Enable vim-style lock-files.  This is just to let a vim user know you
+## are editing a file [s]he is trying to edit and vice versa. There are
+## no plans to implement vim-style undo state in these files.
+# set locking
+
+## The opening and closing brackets that can be found by bracket
+## searches.  They cannot contain blank characters.  The former set must
+## come before the latter set, and both must be in the same order.
+# set matchbrackets "(<[{)>]}"
+
+## Use the blank line below the titlebar as extra editing space.
+# set morespace
+
+## Enable mouse support, if available for your system.  When enabled,
+## mouse clicks can be used to place the cursor, set the mark (with a
+## double click), and execute shortcuts.  The mouse will work in the X
+## Window System, and on the console when gpm is running.
+# set mouse
+
+## Switch on multiple file buffers (inserting a file will put it into
+## a separate buffer).
+# set multibuffer
+
+## Don't convert files from DOS/Mac format.
+# set noconvert
+
+## Don't follow symlinks when writing files.
+# set nofollow
+
+## Don't display the helpful shortcut lists at the bottom of the screen.
+# set nohelp
+
+## Don't add newlines to the ends of files.
+set nonewlines
+
+## Don't wrap text at all.
+set nowrap
+
+## Set operating directory.  nano will not read or write files outside
+## this directory and its subdirectories.  Also, the current directory
+## is changed to here, so any files are inserted from this dir.  A blank
+## string means the operating-directory feature is turned off.
+# set operatingdir ""
+
+## Remember the cursor position in each file for the next editing session.
+# set poslog
+
+## Preserve the XON and XOFF keys (^Q and ^S).
+# set preserve
+
+## The characters treated as closing punctuation when justifying
+## paragraphs.  They cannot contain blank characters.  Only closing
+## punctuation, optionally followed by closing brackets, can end
+## sentences.
+# set punct "!.?"
+
+## Do quick statusbar blanking.  Statusbar messages will disappear after
+## 1 keystroke instead of 26.  Note that "const" overrides this.
+# set quickblank
+
+## The email-quote string, used to justify email-quoted paragraphs.
+## This is an extended regular expression if your system supports them,
+## otherwise a literal string.
+## If you have extended regular expression support, the default is:
+# set quotestr "^([ 	]*[#:>\|}])+"
+## Otherwise:
+# set quotestr "> "
+
+## Fix Backspace/Delete confusion problem.
+# set rebinddelete
+
+## Fix numeric keypad key confusion problem.
+# set rebindkeypad
+
+## Do extended regular expression searches by default.
+# set regexp
+
+## Make the Home key smarter.  When Home is pressed anywhere but at the
+## very beginning of non-whitespace characters on a line, the cursor
+## will jump to that beginning (either forwards or backwards).  If the
+## cursor is already at that position, it will jump to the true
+## beginning of the line.
+# set smarthome
+
+## Use smooth scrolling as the default.
+set smooth
+
+## Enable soft line wrapping (AKA full-line display).
+# set softwrap
+
+## Use this spelling checker instead of the internal one.  This option
+## does not properly have a default value.
+# set speller "aspell -x -c"
+
+## Allow nano to be suspended.
+# set suspend
+
+## Use this tab size instead of the default; it must be greater than 0.
+set tabsize 4
+
+## Convert typed tabs to spaces.
+# set tabstospaces
+
+## Save automatically on exit; don't prompt.
+# set tempfile
+
+## Disallow file modification.  Why would you want this in an rcfile? ;)
+# set view
+
+## The two single-column characters used to display the first characters
+## of tabs and spaces.  187 in ISO 8859-1 (0000BB in Unicode) and 183 in
+## ISO-8859-1 (0000B7 in Unicode) seem to be good values for these.
+## The default when in a UTF-8 locale:
+# set whitespace "»·"
+## The default otherwise:
+# set whitespace ">."
+
+## Detect word boundaries more accurately by treating punctuation
+## characters as parts of words.
+# set wordbounds
+
+
+## Paint the interface elements of nano.
+## This is an example; by default there are no colors.
+# set titlecolor brightwhite,blue
+# set statuscolor brightwhite,green
+# set keycolor green
+# set functioncolor yellow
+
+
+## Setup of syntax coloring.
+##
+## Format:
+##
+## syntax "short description" ["filename regex" ...]
+##
+## The "none" syntax is reserved; specifying it on the command line is
+## the same as not having a syntax at all.  The "default" syntax is
+## special: it takes no filename regexes, and applies to files that
+## don't match any other syntax's filename regexes.
+##
+## color foreground,background "regex" ["regex"...]
+## or
+## icolor foreground,background "regex" ["regex"...]
+##
+## "color" will do case-sensitive matches, while "icolor" will do
+## case-insensitive matches.
+##
+## Valid colors: white, black, red, blue, green, yellow, magenta, cyan.
+## For foreground colors, you may use the prefix "bright" to get a
+## stronger highlight.
+##
+## To use multi-line regexes, use the start="regex" end="regex"
+## [start="regex" end="regex"...] format.
+##
+## If your system supports transparency, not specifying a background
+## color will use a transparent color.  If you don't want this, be sure
+## to set the background color to black or white.
+##
+## All regexes should be extended regular expressions.
+##
+## If you wish, you may put your syntax definitions in separate files.
+## You can make use of such files as follows:
+##
+## include "/path/to/syntax_file.nanorc"
+##
+## Unless otherwise noted, the name of the syntax file (without the
+## ".nanorc" extension) should be the same as the "short description"
+## name inside that file.  These names are kept fairly short to make
+## them easier to remember and faster to type using nano's -Y option.
+##
+## To include all existing syntax definitions, you can do:
+# include "@PKGDATADIR@/*.nanorc"
+
+
+## Key bindings.
+## See nanorc(5) for more details on this.
+##
+## Here are a few samples to get you going.
+##
+# bind M-W nowrap main
+# bind M-A casesens search
+# bind ^S research main
+
+## Set this if your backspace key sends Del most of the time.
+# bind Del backspace all
+## Nanorc files
+# include "/usr/share/nano/nanorc.nanorc"
+
+## C/C++
+include "/usr/share/nano/c.nanorc"
+
+## Makefiles
+include "/usr/share/nano/makefile.nanorc"
+
+## Cascading Style Sheets
+# include "/usr/share/nano/css.nanorc"
+
+## Debian files
+# include "/usr/share/nano/debian.nanorc"
+
+## Gentoo files
+# include "/usr/share/nano/gentoo.nanorc"
+
+## HTML
+# include "/usr/share/nano/html.nanorc"
+
+## PHP
+include "/usr/share/nano/php.nanorc"
+
+## TCL
+# include "/usr/share/nano/tcl.nanorc"
+
+## TeX
+# include "/usr/share/nano/tex.nanorc"
+
+## Quoted emails (under e.g. mutt)
+# include "/usr/share/nano/mutt.nanorc"
+
+## Patch files
+include "/usr/share/nano/patch.nanorc"
+
+## Manpages
+# include "/usr/share/nano/man.nanorc"
+
+## Groff
+# include "/usr/share/nano/groff.nanorc"
+
+## Perl
+include "/usr/share/nano/perl.nanorc"
+
+## Python
+include "/usr/share/nano/python.nanorc"
+
+## Ruby
+# include "/usr/share/nano/ruby.nanorc"
+
+## Java
+# include "/usr/share/nano/java.nanorc"
+
+## Fortran
+# include "/usr/share/nano/fortran.nanorc"
+
+## Objective-C
+# include "/usr/share/nano/objc.nanorc"
+
+## OCaml
+# include "/usr/share/nano/ocaml.nanorc"
+
+## AWK
+include "/usr/share/nano/awk.nanorc"
+
+## Assembler
+# include "/usr/share/nano/asm.nanorc"
+
+## Bourne shell scripts
+include "/usr/share/nano/sh.nanorc"
+
+## POV-Ray
+# include "/usr/share/nano/pov.nanorc"
+
+## XML-type files
+include "/usr/share/nano/xml.nanorc"
--- nano-4.3/src/rcfile.c~	2019-06-18 08:08:13.000000000 +0000
+++ nano-4.3/src/rcfile.c	2019-06-18 13:02:51.088073489 +0000
@@ -1304,7 +1304,11 @@
 	const char *xdgconfdir;
 
 	/* First process the system-wide nanorc, if it exists and is suitable. */
-	nanorc = mallocstrcpy(nanorc, SYSCONFDIR "/nanorc");
+        if (access(SYSCONFDIR "/nanorc", F_OK) == 0) {
+                nanorc = mallocstrcpy(nanorc, SYSCONFDIR "/nanorc");
+        } else {
+                nanorc = mallocstrcpy(nanorc, DATADIR "/defaults/nano/nanorc");
+        }
 	if (is_good_file(nanorc))
 		parse_one_nanorc();
 
